{"version":3,"file":"static/js/8.deca5635.chunk.js","mappings":"qLAIA,QAAeA,EAAAA,QAAWC,OAAO,CAC7BC,WAAY,CACRC,gBAAiBC,EAAAA,QAAUC,aAC3BC,MAAOF,EAAAA,QAAUG,WACjBC,aAAc,IAElBC,cAAe,CACXN,gBAAiBC,EAAAA,QAAUM,aAC3BJ,MAAOF,EAAAA,QAAUG,YAErBI,UAAW,CACPC,YAAa,EACbC,YAAa,QACbC,YAAaV,EAAAA,QAAUW,eACvBT,MAAOF,EAAAA,QAAUY,iB,cC8CzB,QAxDiB,SAAHC,GAC2C,IADtCC,EAAOD,EAAPC,QAASC,EAAUF,EAAVE,WAAaC,EAAMH,EAANG,OAAQC,EAASJ,EAATI,UAGvCC,GAAWC,EAAAA,EAAAA,cAAY,SAAAC,GAAuB,IAArBC,EAAID,EAAJC,MAC3BC,EAAAA,EAAAA,SAAiBN,GAAS,SAACO,GACvBN,GAAU,SAACD,GAAmB,OAC1B,CACIO,GAAAA,EACAF,KAAAA,EACAG,YAAa,KAChBC,QAAAC,EAAAA,EAAAA,SACEV,GAAM,GAEjB,IACAD,GAAW,EACf,GAAG,CAACE,IAEJ,OACIU,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACJd,QAASA,EACTe,QAAS,kBAAMd,GAAW,EAAM,EAChCe,SACEC,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CACHC,SAAUf,EAASgB,SAAA,EAEhBP,EAAAA,EAAAA,KAACK,EAAAA,KAAKG,KAAI,CACPd,KAAK,OACLe,MAAO,CAAC,CAACC,UAAU,EAAOC,IAAK,EAAGC,QAAS,qCAAsCL,UAEjFP,EAAAA,EAAAA,KAACa,EAAAA,MAAK,CACJC,YAAY,wBACZC,MAAOC,EAAOpC,UACdqC,WAAS,OAGdjB,EAAAA,EAAAA,KAACkB,EAAAA,OAAM,CACNC,OAAK,EACLC,KAAK,SACLC,KAAK,QACLN,MAAOC,EAAO7C,WAAWoC,SACxB,eAGFP,EAAAA,EAAAA,KAACkB,EAAAA,OAAM,CACNC,OAAK,EACLJ,MAAOC,EAAOtC,cACd2C,KAAK,QACLC,QAAS,kBAAMlC,GAAW,EAAM,EAACmB,SAChC,eAMnB,C","sources":["screens/Home/components/AddGroup/assets/styles.ts","screens/Home/components/AddGroup/AddGroup.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nimport variables from \"../../../../../styles/variables\";\n\nexport default StyleSheet.create({\n    add_button: {\n        backgroundColor: variables.colorSuccess,\n        color: variables.colorLight,\n        marginBottom: 15\n    },\n    cancel_button: {\n        backgroundColor: variables.colorWarning,\n        color: variables.colorLight,\n    },\n    add_input: {\n        borderWidth: 2,\n        borderStyle: \"solid\",\n        borderColor: variables.colorGreyLight,\n        color: variables.colorGreyDark\n    }\n})","import { useCallback } from \"react\";\nimport { Button, Form, Input, Modal } from \"antd-mobile\";\n\nimport type { ModalProps } from \"../../../../types/propTypes\";\nimport type { GroupType } from \"../../../../types/types\";\nimport generateUniqueId from \"../../../../globals/functions/generateUniqueId\";\nimport styles from \"./assets/styles\";\n\nconst AddGroup = ({visible, setVisible,  groups, setGroups}:ModalProps\n       & {groups: GroupType[], setGroups: Function}) => {\n\n    const addGroup = useCallback(({name}:GroupType) => {\n        generateUniqueId(groups, ((id: string) => {\n            setGroups((groups: GroupType[]) => [\n                {\n                    id,\n                    name,\n                    memberNotes: []\n                },\n                ...groups,\n            ])\n        }))\n        setVisible(false);\n    }, [setGroups])\n\n    return (\n        <Modal \n          visible={visible} \n          onClose={() => setVisible(false)}\n          content={\n            <Form \n              onFinish={addGroup}\n              >\n                 <Form.Item\n                    name=\"name\"\n                    rules={[{required: true,  min: 2, message: \"Minimum 2 letters for group name\"} ]}\n                >\n                    <Input \n                      placeholder=\"Type the group's name\"\n                      style={styles.add_input}\n                      clearable\n                     />\n                </Form.Item>\n                 <Button \n                  block\n                  type=\"submit\"\n                  size=\"small\"\n                  style={styles.add_button}\n                  >\n                    Add Group\n                </Button>\n                 <Button \n                  block\n                  style={styles.cancel_button}\n                  size=\"small\"\n                  onClick={() => setVisible(false)}\n                  >\n                   Cancel\n                </Button>\n            </Form>\n        } />\n    )\n}\n\nexport default AddGroup;"],"names":["StyleSheet","create","add_button","backgroundColor","variables","colorSuccess","color","colorLight","marginBottom","cancel_button","colorWarning","add_input","borderWidth","borderStyle","borderColor","colorGreyLight","colorGreyDark","_ref","visible","setVisible","groups","setGroups","addGroup","useCallback","_ref2","name","generateUniqueId","id","memberNotes","concat","_toConsumableArray","_jsx","Modal","onClose","content","_jsxs","Form","onFinish","children","Item","rules","required","min","message","Input","placeholder","style","styles","clearable","Button","block","type","size","onClick"],"sourceRoot":""}